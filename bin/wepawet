#!/usr/bin/env ruby
# DESCRIPTION: queries wepawet
begin
	require 'wepawet'
rescue LoadError
	require 'rubygems'
	require 'wepawet'
end
require 'getoptlong'
require 'configparser'
require 'pp'

def usage
  msg = <<EOD
Usage: #{$0} OPTIONS
   -c,--config FILE                use a given configuration file
   -C,--credentials USER:PASSWD    use the given credentials
   -d,--domain DOMAIN              query if DOMAIN has been analyzed
   -h,--help                       print this message and exit
   -q,--query TASK_ID              query the status of a request
   -r,--referer URL                use URL as the initial referer
   -s,--submit URL                 submit URL for analysis
   -u,--url URL                    query if URL has been analyzed
   -w,--wepawet SERVER             wepawet server
EOD
	exit
end

opts = GetoptLong.new(
	[ '--help', '-h', GetoptLong::NO_ARGUMENT ],
	[ '--config', '-c', GetoptLong::REQUIRED_ARGUMENT ],
	[ '--credentials', '-C', GetoptLong::REQUIRED_ARGUMENT ],
	[ '--wepawet', '-w', GetoptLong::REQUIRED_ARGUMENT ],

	[ '--submit', '-s', GetoptLong::REQUIRED_ARGUMENT ],
	[ '--referer', '-r', GetoptLong::REQUIRED_ARGUMENT ],

	[ '--query', '-q', GetoptLong::REQUIRED_ARGUMENT ],
	[ '--domain', '-d', GetoptLong::REQUIRED_ARGUMENT ],
	[ '--url', '-u', GetoptLong::REQUIRED_ARGUMENT ]
)

config = "#{ENV['HOME']}/.wepawet"
action = 'query' # or 'submit'
querytype = 'hash' # or 'url' or 'domain'
item = nil
referer = nil

user = nil
pass = nil
host = nil

opts.each do |opt, arg|
	case opt
	when '--help'
		usage
	when '--config'
		config = arg
	when '--credentials'
		user, pass = arg.split(/:/)
	when '--wepawet'
		host = arg
	when '--submit'
		action = 'submit'
		item = arg
	when '--referer'
		referer = arg
	when '--domain'
		querytype = 'domain'
		item = arg
	when '--query'
		item = arg
	when '--url'
		querytype = 'url'
		item = arg
	else
		usage
	end
end

if File.exists? config
	config = ConfigParser.new(config)
else
	config = {}
end

if user
	config['user'] = user
	config['pass'] = pass
end
if host
	config['wepawetQueryUrl'] = "http://#{host}/services/query.php"
	config['wepawetSubmitUrl'] = "http://#{host}/services/upload.php"
	config['wepawetDomainUrl'] = "http://#{host}/services/domain.php"
	config['wepawetUrlUrl'] = "http://#{host}/services/url.php"
end
unless config['wepawetQueryUrl']
	puts "wepawetQueryUrl is not defined in either the configuration file or via the --wepawet option"
	usage
end

if action == 'submit'
	w = Wepawet::Submit.new(config)
	if File.exists(item)
		puts w.submit_file(item)
	else
		puts w.submit_url(item)
	end
elsif action == 'query'
	w = Wepawet::Query.new(config)
	case querytype
	when 'hash'
		pp w.by_hash(item)
	when 'domain'
		pp w.by_domain(item)
	when 'url'
		pp w.by_url(item)
	else
		usage
	end
else
	usage
end
